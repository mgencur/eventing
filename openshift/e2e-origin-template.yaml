kind: Template
apiVersion: template.openshift.io/v1

metadata:
  name: e2e-origin-testsuite

parameters:
- name: NAMESPACE
  required: true
- name: IMAGE_TESTS
  required: true
- name: TEST_COMMAND
  required: true

objects:

# The e2e pod spins up a cluster, runs e2e tests, and then cleans up the cluster.
- kind: Pod
  apiVersion: v1
  metadata:
    name: e2e-origin-testsuite
    namespace: ${NAMESPACE}
  spec:
    restartPolicy: Never
    activeDeadlineSeconds: 14400
    terminationGracePeriodSeconds: 900
    volumes:
    - name: kubeconfig
      configMap:
        name: kubeconfig #this config map is created externally before deploying the template

    containers:
    - name: test
      image: ${IMAGE_TESTS}
      terminationMessagePolicy: FallbackToLogsOnError
      resources:
        requests:
          cpu: 500m
          memory: 300Mi
        limits:
          memory: 3Gi
      volumeMounts:
      - name: kubeconfig
        mountPath: /tmp/kubeconfig
      env:
      - name: KUBECONFIG
        value: /tmp/kubeconfig/kubeconfig
      command:
      - /bin/bash
      - -c
      - |
        #!/bin/bash
        set -euo pipefail

        export PATH=/usr/libexec/origin:$PATH

        trap 'touch /tmp/shared/exit' EXIT
        trap 'kill $(jobs -p); exit 0' TERM

        mkdir -p "${HOME}"

        export PROVIDER_ARGS="-provider=aws -gce-zone=us-east-1"
        export TEST_PROVIDER='{"type":"aws","region":"us-east-1","zone":"us-east-1a","multizone":true,"multimaster":true}'
        export KUBE_SSH_USER=core

        mkdir -p /tmp/artifacts/e2e-origin
        
        function run-tests() {
          sleep 60 #wait so that we can mount volumes
          openshift-tests run "${TEST_SUITE}" \
            --provider "${TEST_PROVIDER:-}" -o /tmp/artifacts/e2e-origin/e2e-origin.log --junit-dir /tmp/artifacts/e2e-origin/junit
          
          # Share logs
          oc create configmap e2e-origin-logs --from-file=e2e-origin-logs=/tmp/artifacts/e2e-origin/e2e-origin.log

          # Share junit xml
          junit_file=$(find . -name "junit_e2e_*.xml")
          oc create configmap e2e-origin-junit --from-file=e2e-origin-junit=$junit_file

          exit 0
        }

        ${TEST_COMMAND}